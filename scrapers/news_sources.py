"""
News sources configuration for the scraper.
Defines the list of news sources and their RSS feeds.
Generated by validate_feeds.py on 2025-05-14
"""

import os
import json
import logging
from typing import List, Dict, Any

# Configure logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def get_news_sources() -> List[Dict[str, Any]]:
    """
    Get the list of news sources with their RSS feeds.
    
    Returns:
        List of news source dictionaries with name, country, language, and RSS feeds
    """
    # Define the comprehensive set of news sources from around the world
    news_sources = [
        {
            "name": "CNN",
            "country": "USA",
            "language": "en",
            "rss_feeds": [
                "http://rss.cnn.com/rss/cnn_topstories.rss",  # Valid
                "http://rss.cnn.com/rss/cnn_world.rss",  # Valid
                "http://rss.cnn.com/rss/cnn_us.rss",  # Valid
                "http://rss.cnn.com/rss/money_latest.rss",  # Valid
                "http://rss.cnn.com/rss/cnn_allpolitics.rss",  # Valid
            ]
        },
        {
            "name": "Fox News",
            "country": "USA",
            "language": "en",
            "rss_feeds": [
                "https://moxie.foxnews.com/google-publisher/latest.xml",  # Valid
                "https://moxie.foxnews.com/google-publisher/politics.xml",  # Valid
                "https://moxie.foxnews.com/google-publisher/latest.xml",  # Valid
                "https://moxie.foxnews.com/google-publisher/world.xml",  # Valid
            ]
        },
        {
            "name": "The New York Times",
            "country": "USA",
            "language": "en",
            "rss_feeds": [
                "https://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml",  # Valid
                "https://rss.nytimes.com/services/xml/rss/nyt/World.xml",  # Valid
                "https://rss.nytimes.com/services/xml/rss/nyt/US.xml",  # Valid
                "https://rss.nytimes.com/services/xml/rss/nyt/Politics.xml",  # Valid
            ]
        },
        {
            "name": "Washington Post",
            "country": "USA",
            "language": "en",
            "rss_feeds": [
                "https://feeds.washingtonpost.com/rss/world",  # Valid
                "https://feeds.washingtonpost.com/rss/national",  # Invalid: HTTP error: 502
                "https://feeds.washingtonpost.com/rss/politics",  # Valid
            ]
        },
        {
            "name": "NPR",
            "country": "USA",
            "language": "en",
            "rss_feeds": [
                "https://feeds.npr.org/1001/rss.xml",  # Valid
                "https://feeds.npr.org/1003/rss.xml",  # Valid
                "https://feeds.npr.org/1014/rss.xml",  # Valid
            ]
        },
        {
            "name": "CBC News",
            "country": "Canada",
            "language": "en",
            "rss_feeds": [
                "https://rss.cbc.ca/lineup/topstories.xml",  # Valid
                "https://rss.cbc.ca/lineup/world.xml",  # Valid
                "https://rss.cbc.ca/lineup/politics.xml",  # Valid
            ]
        },
        {
            "name": "BBC",
            "country": "UK",
            "language": "en",
            "rss_feeds": [
                "http://feeds.bbci.co.uk/news/rss.xml",  # Valid
                "http://feeds.bbci.co.uk/news/world/rss.xml",  # Valid
                "http://feeds.bbci.co.uk/news/politics/rss.xml",  # Valid
                "http://feeds.bbci.co.uk/news/business/rss.xml",  # Valid
            ]
        },
        {
            "name": "The Guardian",
            "country": "UK",
            "language": "en",
            "rss_feeds": [
                "https://www.theguardian.com/international/rss",  # Valid
                "https://www.theguardian.com/uk/rss",  # Valid
                "https://www.theguardian.com/politics/rss",  # Valid
                "https://www.theguardian.com/world/rss",  # Valid
            ]
        },
        {
            "name": "Deutsche Welle",
            "country": "Germany",
            "language": "en",
            "rss_feeds": [
                "https://rss.dw.com/rdf/rss-en-all",  # Valid
                "https://rss.dw.com/rdf/rss-en-world",  # Valid
            ]
        },
        {
            "name": "France 24",
            "country": "France",
            "language": "en",
            "rss_feeds": [
                "https://www.france24.com/en/rss",  # Valid
            ]
        },
        {
            "name": "RT",
            "country": "Russia",
            "language": "en",
            "rss_feeds": [
                "https://www.rt.com/rss/",  # Valid
            ]
        },
        {
            "name": "TASS",
            "country": "Russia",
            "language": "en",
            "rss_feeds": [
                "https://tass.com/rss/v2.xml",  # Valid
            ]
        },
        {
            "name": "Euronews",
            "country": "EU",
            "language": "en",
            "rss_feeds": [
                "https://www.euronews.com/rss",  # Valid
            ]
        },
        {
            "name": "RTE News",
            "country": "Ireland",
            "language": "en",
            "rss_feeds": [
                "https://www.rte.ie/news/rss/news-headlines.xml",  # Valid
            ]
        },
        {
            "name": "Al Jazeera",
            "country": "Qatar",
            "language": "en",
            "rss_feeds": [
                "https://www.aljazeera.com/xml/rss/all.xml",  # Valid
            ]
        },
        {
            "name": "Jerusalem Post",
            "country": "Israel",
            "language": "en",
            "rss_feeds": [
                "https://www.jpost.com/rss/front-page",  # Invalid: HTTP error: 404
            ]
        },
        {
            "name": "Haaretz",
            "country": "Israel",
            "language": "en",
            "rss_feeds": [
                "https://www.haaretz.com/cmlink/1.4605045",  # Invalid: HTTP error: 404
            ]
        },
        {
            "name": "Times of Israel",
            "country": "Israel",
            "language": "en",
            "rss_feeds": [
                "https://www.timesofisrael.com/feed/",  # Valid
            ]
        },
        {
            "name": "Gulf News",
            "country": "UAE",
            "language": "en",
            "rss_feeds": [
                "https://gulfnews.com/feed",
            ]
        },
        {
            "name": "Arab News",
            "country": "Saudi Arabia",
            "language": "en",
            "rss_feeds": [
                "https://www.arabnews.com/rss.xml",  # Invalid: HTTP error: 403
            ]
        },
        {
            "name": "Anadolu Agency",
            "country": "Turkey",
            "language": "en",
            "rss_feeds": [
                "https://www.aa.com.tr/en/rss/default?cat=world",  # Valid
            ]
        },
        {
            "name": "Dawn",
            "country": "Pakistan",
            "language": "en",
            "rss_feeds": [
                "https://www.dawn.com/feed",  # Valid
            ]
        },
        {
            "name": "The Express Tribune",
            "country": "Pakistan",
            "language": "en",
            "rss_feeds": [
                "https://tribune.com.pk/feed/latest",  # Valid
            ]
        },
        {
            "name": "The Times of India",
            "country": "India",
            "language": "en",
            "rss_feeds": [
                "https://timesofindia.indiatimes.com/rssfeeds/296589292.cms",  # Valid
                "https://timesofindia.indiatimes.com/rssfeeds/1081479906.cms",  # Valid
            ]
        },
        {
            "name": "The Hindu",
            "country": "India",
            "language": "en",
            "rss_feeds": [
                "https://www.thehindu.com/news/national/feeder/default.rss",  # Valid
                "https://www.thehindu.com/news/international/feeder/default.rss",  # Valid
            ]
        },
        {
            "name": "Hindustan Times",
            "country": "India",
            "language": "en",
            "rss_feeds": [
                "https://www.hindustantimes.com/feeds/rss/world-news/rssfeed.xml",  # Invalid: Feed contains no entries
                "https://www.hindustantimes.com/feeds/rss/india-news/rssfeed.xml",  # Invalid: Feed contains no entries
            ]
        },
        {
            "name": "South China Morning Post",
            "country": "Hong Kong/China",
            "language": "en",
            "rss_feeds": [
                "https://www.scmp.com/rss/91/feed",  # Valid
            ]
        },
        {
            "name": "China Daily",
            "country": "China",
            "language": "en",
            "rss_feeds": [
                "https://www.chinadaily.com.cn/rss/world_rss.xml",  # Valid
            ]
        },
        {
            "name": "Global Times",
            "country": "China",
            "language": "en",
            "rss_feeds": [
                "https://www.globaltimes.cn/rss/world.xml",  # Invalid: HTTP error: 404
            ]
        },
        {
            "name": "The Japan Times",
            "country": "Japan",
            "language": "en",
            "rss_feeds": [
                "https://www.japantimes.co.jp/feed/",  # Valid
            ]
        },
        {
            "name": "The Korea Times",
            "country": "South Korea",
            "language": "en",
            "rss_feeds": [
                "https://www.koreatimes.co.kr/www/rss/rss.xml",  # Valid
            ]
        },
        {
            "name": "The Straits Times",
            "country": "Singapore",
            "language": "en",
            "rss_feeds": [
                "https://www.straitstimes.com/news/world/rss.xml",  # Valid
                "https://www.straitstimes.com/news/asia/rss.xml",  # Valid
            ]
        },
        {
            "name": "News24",
            "country": "South Africa",
            "language": "en",
            "rss_feeds": [
                "https://www.news24.com/rss/feed",  # Invalid: HTTP error: 404
            ]
        },
        {
            "name": "Mail & Guardian",
            "country": "South Africa",
            "language": "en",
            "rss_feeds": [
                "https://mg.co.za/feed/",  # Valid
            ]
        },
        {
            "name": "AllAfrica",
            "country": "Pan-African",
            "language": "en",
            "rss_feeds": [
                "https://allafrica.com/tools/headlines/rdf/latest/headlines.rdf",  # Valid
            ]
        },
        {
            "name": "The East African",
            "country": "East Africa",
            "language": "en",
            "rss_feeds": [
                "https://www.theeastafrican.co.ke/articlefeeds/1447302/1447302-view-asFeed-u2uktcz/index.xml",  # Invalid: HTTP error: 403
            ]
        },
        {
            "name": "ABC News (Australia)",
            "country": "Australia",
            "language": "en",
            "rss_feeds": [
                "https://www.abc.net.au/news/feed/51120/rss.xml",  # Valid
            ]
        },
        {
            "name": "The Sydney Morning Herald",
            "country": "Australia",
            "language": "en",
            "rss_feeds": [
                "https://www.smh.com.au/rss/world.xml",  # Valid
            ]
        },
        {
            "name": "New Zealand Herald",
            "country": "New Zealand",
            "language": "en",
            "rss_feeds": [
                "https://www.nzherald.co.nz/rss/world/",  # Invalid: HTTP error: 404
            ]
        },
        {
            "name": "The Wall Street Journal",
            "country": "USA",
            "language": "en",
            "rss_feeds": [
                "https://feeds.a.dj.com/rss/RSSWorldNews.xml",
                "https://feeds.a.dj.com/rss/WSJcomUSBusiness.xml",
            ]
        },
        {
            "name": "Politico",
            "country": "USA", 
            "language": "en",
            "rss_feeds": [
                "https://www.politico.com/rss/politics08.xml",
                "https://www.politico.com/rss/world.xml",
            ]
        },
        {
            "name": "United Nations",
            "country": "International",
            "language": "en",
            "rss_feeds": [
                "https://news.un.org/feed/subscribe/en/news/all/rss.xml",  # Valid
            ]
        },
        {
            "name": "ABC News (US)",
            "country": "USA",
            "language": "en",
            "rss_feeds": [
                "https://abcnews.go.com/abcnews/topstories",  # Valid
                "https://abcnews.go.com/abcnews/politicsheadlines",  # Valid
                "https://abcnews.go.com/abcnews/usheadlines",  # Valid
                "https://abcnews.go.com/abcnews/internationalheadlines",  # Valid
            ]
        },
        {
            "name": "Foreign Affairs",
            "country": "USA",
            "language": "en",
            "rss_feeds": [
                "https://www.foreignaffairs.com/rss.xml",  # Valid
            ]
        },
    ]
    
    # Try to load custom news sources from a JSON file if it exists
    custom_sources_path = os.path.join(os.path.dirname(__file__), 'custom_news_sources.json')
    if os.path.exists(custom_sources_path):
        try:
            with open(custom_sources_path, 'r') as f:
                custom_sources = json.load(f)
                logger.info(f"Loaded {len(custom_sources)} custom news sources")
                news_sources.extend(custom_sources)
        except Exception as e:
            logger.error(f"Error loading custom news sources: {e}")
    
    logger.info(f"Total news sources: {len(news_sources)}")
    return news_sources

def add_news_source(name: str, country: str, language: str, rss_feeds: List[str]) -> bool:
    """
    Add a new news source to the custom sources file.
    
    Args:
        name: Name of the news source
        country: Country of origin
        language: Language code (e.g., 'en')
        rss_feeds: List of RSS feed URLs
        
    Returns:
        True if the source was added successfully, False otherwise
    """
    custom_sources_path = os.path.join(os.path.dirname(__file__), 'custom_news_sources.json')
    
    # Load existing custom sources or create an empty list
    custom_sources = []
    if os.path.exists(custom_sources_path):
        try:
            with open(custom_sources_path, 'r') as f:
                custom_sources = json.load(f)
        except Exception as e:
            logger.error(f"Error loading custom news sources: {e}")
    
    # Check if source already exists
    for source in custom_sources:
        if source.get('name') == name:
            logger.warning(f"News source '{name}' already exists")
            return False
    
    # Add the new source
    custom_sources.append({
        "name": name,
        "country": country,
        "language": language,
        "rss_feeds": rss_feeds
    })
    
    # Save the updated list
    try:
        with open(custom_sources_path, 'w') as f:
            json.dump(custom_sources, f, indent=2)
        logger.info(f"Added news source: {name}")
        return True
    except Exception as e:
        logger.error(f"Error saving custom news sources: {e}")
        return False

if __name__ == "__main__":
    # When run directly, print out the configured news sources
    sources = get_news_sources()
    print(f"Configured {len(sources)} news sources:")
    
    # Count sources by region
    regions = {}
    for source in sources:
        country = source['country']
        regions[country] = regions.get(country, 0) + 1
    
    print("\nSources by country:")
    for country, count in sorted(regions.items(), key=lambda x: x[1], reverse=True):
        print(f"  {country}: {count} sources")
        
    print("\nSome of the available sources:")
    for i, source in enumerate(sources[:10], 1):
        feed_count = len(source.get('rss_feeds', []))
        print(f"  {i}. {source['name']} ({source['country']}, {source['language']}): {feed_count} feeds")
